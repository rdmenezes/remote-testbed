#summary Development roadmap and release plans for the Re-Mote Testbed Framework
#labels Phase-Requirements,Phase-RFC

For each milestone, tasks that should be made for each of the different modules are listed. Where the changes relates to existing issues this is mentioned, and more details for the task will exist in the comments of the specified issue.

Any task of "a significant size" should have its own issues, and issues should always be created when a task involves several modules.

The status of tasks in this document are marked using:

 * *(STARTED)*: meaning implementation is in progress.
 * *(DONE)* meaning the change has been implemented, tested, and is ready.

They should reflect the status of individual issues, when possible.

Furthermore, changes where one developer is assigned can be noted by adding the initials.

== Re-Mote Testbed Framework version 1.0 ==

View [http://code.google.com/p/remote-testbed/issues/list?can=2&q=release1.0&colspec=ID+Type+Component+Status+Priority+Milestone+Owner+Summary&x=component&y=priority&mode=grid&cells=tiles  all the issues] tagged as belonging to this release to get an overview, to get an idea of what needs work look at [http://code.google.com/p/remote-testbed/issues/list?can=2&q=release1.0&sort=&mode=grid&y=Status&x=Component&cells=tiles&nobtn=Update the issues arranged by status].

=== remote-db ===

 * Issue 3: Add mote platform attribute. The priority should probably be higher than tosaddress and macaddress?

=== remote-ws ===

 * Issue 1: Prevent possible SQL injection attacks. All queries should be changed to use `PreparedStatement`. *(STARTED)* (JF)

=== remote-mci ===

 * Issue 2: Fix problems with mysql++ usage being incompatible across different versions of the library. *(STARTED)* (JF)

 * Issue 3: MCH should read mote platform via mote device file, send the information to MCS, which should put it in the database as a mote attribute.

 * Issue 6: Make MCH support the use of external programs to control mote start, stop, and reset, similar to how programming is currently done via an external program.

 * Update INSTALL file to state which versions of dependencies such as libraries are required.

=== remote-gui ===

 * Issue 3: Display mote platform in the mote panes.

 * Issue 4: Update state of control motes in the all motes pane. This will not require any round-trip time, only an update of data already in the client.

 * Remove/disable traces of the "motes map", since it is unlikely to be ready for this release.