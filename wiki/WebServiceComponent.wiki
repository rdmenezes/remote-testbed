#summary Introduction to the Re-Mote WebService Component (remote-ws)
#labels Featured,Phase-Deploy,Component-WS

= The Re-Mote Web Services =

This package contains the files for building and deploying the
webservice components used by Re-Mote. It also

It has the following structure:

 * *lib:* Jar files containing dependencies for making the various conversions and for compiling the server and client specific libraries.
 * *src:* Java classes responsible of the server specific part of the services.
 * *wsdd:* The web service deployment descriptors.

== The Build Process ==

Both of the above are used for generating WSDL files describing
the services made available. Using the WSDL files, client Java classes
for accessing the webservices can then be created and compiled for use
by the Re-Mote client.

 * Something about the Makefile rules for deploying. Saying that they are best for localhost?

== Installation ==

=== Phase 1: Setting up Tomcat and Axis ===

 # Start out by copying the `axis/` example directory from the axis-bin-1.4 release to the $TOMCAT/webapps directory. Note, in order for tomcat to be able to remember your configuration of deployed services etc. and reload it between reboots, you need to make the `axis/WEB-INF` directory writable. Settings will be maintained in a file called `server-config.xml`.
 # Install database specific jar files i the $TOMCAT/common/lib directory:
   * mysql-connector-java-5.0.4.jar
   * naming-factory-dbcp.jar
 # Modify server.xml to declare a resource for the database:
{{{
<Server port="8005" shutdown="SHUTDOWN">
	<!-- ... -->
	<Service name="Catalina">
		<!-- ... -->
		<Engine name="Catalina" defaultHost="localhost">
			<!-- ... -->
			<Host name="localhost" appBase="webapps"
				unpackWARs="true" autoDeploy="true"
				xmlValidation="false" xmlNamespaceAware="false">
				<!-- ... -->
				<Context path="/axis" docBase="axis"
					debug="5" reloadable="true" crossContext="true">
					<!-- ... -->
					<Resource name="jdbc/REMOTE" auth="Container" type="javax.sql.DataSource"
						maxActive="100" maxIdle="30" maxWait="10000"
						username="remote_admin" password="remote"
						driverClassName="com.mysql.jdbc.Driver"
						url="jdbc:mysql://localhost/REMOTE?autoReconnect=true"/>
				</Context>
			</Host>
		</Engine>
	</Service>
</Server>
}}}
 * Restart tomcat. Note, while changes in the axis specific configuration files will automatically be noticed by tomcat, always remember to restart tomcat after changing the `server.xml` file.
 * Check that the axis start page loads. If it does, also check that dependencies are satisfied by going to the "Validation" page.

=== Phase 2: Installing the web services ===

 * Build the remote-ws components by running `make` in the toplevel directory.
 * Copy lib/remote-ws-server.jar to $TOMCAT/webapps/axis/WEB-INF/lib. Verify that tomcat notices the new library and reloads the context. Note, you should configure the settings related to the `deploy-jar` rule in the `Makefile` to do this for you, if you plan to do some tweaking of the server-side code yourself.
 * Deploy the the web services using the WSDD files in the `wsdd` directory. The `Makefile`'s `deploy-wsdd` rule might be of help, however, you need to change the default credentials in the top of the file.

== Testing the Deployment ==

 * Using SOAPMonitor, contrib/soapmonitor/
 * Using tcpmon
 * Checking the tomcat logs (catalina.out)